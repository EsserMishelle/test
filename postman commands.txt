Please enter a MongoDB connection string (Default: mongodb://localhost/): 
For mongosh info see: https://docs.mongodb.com/mongodb-shell/

Atlas atlas-s73dnf-shard-0 [primary] fruits> use db
switched to db db
Atlas atlas-s73dnf-shard-0 [primary] db> use books
switched to db books
Atlas atlas-s73dnf-shard-0 [primary] books> use bookstore
switched to db bookstore
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.find({rating: 9})
[
  {
    _id: ObjectId('65c281d77fb4975e75b1bbfa'),
    title: 'The Way of Kings',
    author: 'Brandon Sanderson',
    pages: 350,
    genres: [ 'fantasy', 'dystopian' ],
    rating: 9,
    reviews: [ '', 'name: "Mario", body: "so so' ]
  },
  {
    _id: ObjectId('65c29567c1fa93005d403c2c'),
    title: 'The Way of Kingdom',
    author: 'Brandon Sanderson',
    rating: 9,
    pages: 400,
    genres: [ 'fantasy' ],
    reviews: [
      { name: 'Randon', body: 'love it' },
      { name: 'Steve', body: 'hate it' }
    ]
  }
]
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.find({rating: 9}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'bookstore.books',
    indexFilterSet: false,
    parsedQuery: { rating: { '$eq': 9 } },
    queryHash: '9F729CC0',
    planCacheKey: '9F729CC0',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { rating: { '$eq': 9 } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 2,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 10,
    executionStages: {
      stage: 'COLLSCAN',
      filter: { rating: { '$eq': 9 } },
      nReturned: 2,
      executionTimeMillisEstimate: 0,
      works: 11,
      advanced: 2,
      needTime: 8,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 10
    }
  },
  command: { find: 'books', filter: { rating: 9 }, '$db': 'bookstore' },
  serverInfo: {
    host: 'ac-f6mpyso-shard-00-01.wwhrp1d.mongodb.net',
    port: 27017,
    version: '6.0.13',
    gitVersion: '3b13907f9bdf6bd3264d67140d6c215d51bbd20c'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 16793600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 33554432,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600
  },
  ok: 1,
  '$clusterTime': {
    clusterTime: Timestamp({ t: 1707287458, i: 19 }),
    signature: {
      hash: Binary.createFromBase64('PGJXRefQ+40jhNzZw+QJvb8dN/8=', 0),
      keyId: Long('7299222723991961609')
    }
  },
  operationTime: Timestamp({ t: 1707287458, i: 19 })
}
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.createIndex({rating:8})
rating_8
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { rating: 8 }, name: 'rating_8' }
]
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.find({rating: 9}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'bookstore.books',
    indexFilterSet: false,
    parsedQuery: { rating: { '$eq': 9 } },
    queryHash: '9F729CC0',
    planCacheKey: '329525E6',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'FETCH',
      inputStage: {
        stage: 'IXSCAN',
        keyPattern: { rating: 8 },
        indexName: 'rating_8',
        isMultiKey: false,
        multiKeyPaths: { rating: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: { rating: [ '[9, 9]' ] }
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 2,
    executionTimeMillis: 1,
    totalKeysExamined: 2,
    totalDocsExamined: 2,
    executionStages: {
      stage: 'FETCH',
      nReturned: 2,
      executionTimeMillisEstimate: 0,
      works: 3,
      advanced: 2,
      needTime: 0,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      docsExamined: 2,
      alreadyHasObj: 0,
      inputStage: {
        stage: 'IXSCAN',
        nReturned: 2,
        executionTimeMillisEstimate: 0,
        works: 3,
        advanced: 2,
        needTime: 0,
        needYield: 0,
        saveState: 0,
        restoreState: 0,
        isEOF: 1,
        keyPattern: { rating: 8 },
        indexName: 'rating_8',
        isMultiKey: false,
        multiKeyPaths: { rating: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: { rating: [ '[9, 9]' ] },
        keysExamined: 2,
        seeks: 1,
        dupsTested: 0,
        dupsDropped: 0
      }
    }
  },
  command: { find: 'books', filter: { rating: 9 }, '$db': 'bookstore' },
  serverInfo: {
    host: 'ac-f6mpyso-shard-00-01.wwhrp1d.mongodb.net',
    port: 27017,
    version: '6.0.13',
    gitVersion: '3b13907f9bdf6bd3264d67140d6c215d51bbd20c'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 16793600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 33554432,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600
  },
  ok: 1,
  '$clusterTime': {
    clusterTime: Timestamp({ t: 1707287570, i: 11 }),
    signature: {
      hash: Binary.createFromBase64('cmc2unbWgpgU7Q4AzEsbQPfClX8=', 0),
      keyId: Long('7299222723991961609')
    }
  },
  operationTime: Timestamp({ t: 1707287570, i: 11 })
}
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.dropIndex({rating: 8})
{
  nIndexesWas: 2,
  ok: 1,
  '$clusterTime': {
    clusterTime: Timestamp({ t: 1707287670, i: 27 }),
    signature: {
      hash: Binary.createFromBase64('aEc32EJj2XbLc2JVRxpiz9xlzD0=', 0),
      keyId: Long('7299222723991961609')
    }
  },
  operationTime: Timestamp({ t: 1707287670, i: 25 })
}
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.dropIndex({rating: 8})
MongoshInternalError: can't find index with key: { rating: 8 }
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.getIndexes
[Function: getIndexes] AsyncFunction {
  apiVersions: [ 1, Infinity ],
  serverVersions: [ '3.2.0', '999.999.999' ],
  returnsPromise: true,
  topologies: [ 'ReplSet', 'Sharded', 'LoadBalanced', 'Standalone' ],
  returnType: { type: 'unknown', attributes: {} },
  deprecated: false,
  platforms: [ 'Compass', 'Browser', 'CLI' ],
  isDirectShellCommand: false,
  acceptsRawInput: false,
  shellCommandCompleter: undefined,
  help: [Function (anonymous)] Help
}
Atlas atlas-s73dnf-shard-0 [primary] bookstore> db.books.getIndexes()
[ { v: 2, key: { _id: 1 }, name: '_id_' } ]
Atlas atlas-s73dnf-shard-0 [primary] bookstore>
























